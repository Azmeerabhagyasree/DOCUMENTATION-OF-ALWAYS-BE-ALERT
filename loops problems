------------------------------------------------
initialize loop counter ;                      !
while ( test loop counter using a condition )  !
{                                              !
do this ;                                      !
and this ;                                     !
increment loop counter ;                       !
}                                              !
-----------------------------------------------!







QUESTION 1:

example that uses a while loop to calculate
simple interest for 3 sets of values of principal, number of years and rate
of interest 

#include<stdio.h>
int main ()
{
    int p,n,count;
    float r,si;
     count=1;
     while(count<=3)
     {
         printf("enter p,n,r\n");
         scanf("%d %d %f",&p ,&n ,&r);
         si =( p*n*r)/100;
         printf("%f\n",si);
         count=count+1;
     }
     return 0;
}

OUTPUT :
enter p,n,r
5000 1 3.1
155.000000
enter p,n,r
2000 2 2.1
84.000000
enter p,n,r
2200 4 1.3
114.400002
----------------------------------------------------------------------!
for ( initialize counter ; test counter ; increment counter )         !
{                                                                     !
do this ;                                                             !
and this ;                                                            !
and this ;                                                           !
}                                                                    !
-------------------------------------------------------------------------
int main( )
{
int p, n, count ;
float r, si ;
for ( count = 1 ; count <= 3 ; count = count + 1 )
{
printf ( "Enter values of p, n, and r " ) ;
scanf ( "%d %d %f", &p, &n, &r ) ;
si = p * n * r / 100 ;
printf ( "Simple Interest = Rs.%f\n", si ) ;
}
return 0 ;
} 

OUTPUT:
Enter values of p, n, and r 12222 3 1.2
Simple Interest = Rs.439.992035
Enter values of p, n, and r 38947 3 1.4
Simple Interest = Rs.1635.773926
Enter values of p, n, and r 1874368 4 1.9
Simple Interest = Rs.142451.968750
--------------------------------------------------------------------

NESTING OF LOOPS

# include <stdio.h>
int main( )
{
int r, c, sum ;
for ( r = 1 ; r <= 3 ; r++ ) /* outer loop */
{
for ( c = 1 ; c <= 2 ; c++ ) /* inner loop */
{
sum = r + c ;
printf ( "r = %d c = %d sum = %d\n", r, c, sum ) ;
}
}
return 0 ;
}


OUTPUT:
r = 1 c = 1 sum = 2
r = 1 c = 2 sum = 3
r = 2 c = 1 sum = 3
r = 2 c = 2 sum = 4
r = 3 c = 1 sum = 4
r = 3 c = 2 sum = 5
-----------------------------------------------------------------------------
 BREAK :  
 
Write a program to determine whether a number is prime
or not. A prime number is said to be prime if it is divisible only by 1 or
itself.
All we have to do to test whether a number is prime or not, is to divide it
successively by all numbers from 2 to one less than itself. If remainder of
any of these divisions is zero, the number is not a prime. If no division
yields a zero then the number is a prime number. Following program
implements this logic:


# include <stdio.h>
int main( )
{
    int num,i;
    printf("enter num");
    scanf("%d",&num);
    i=2;
    while(i<=num-1)
    {
        if(num%i==0)
        {
            printf("not a prime ");
            break;
        }
        i++;
    }
    if(i==num)
    printf("prime num");
}

OUTPUT:
enter num111
not a prime 
-------------------------------------------------------------------------------------------
CONTINUE STATEMENT 
int main( )
{
int i, j ;
for ( i = 1 ; i <= 2 ; i++ )
{
for ( j = 1 ; j <= 2 ; j++ )
{
if ( i == j )
continue ;
printf ( "%d %d\n", i, j ) ;
}
}
return 0 ;
} 

OUTPUT:
1 2
2 1

